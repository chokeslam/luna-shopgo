{"version":3,"sources":["currency.js"],"names":["System","register","_export","_context","Currency","setters","execute","static","this","getCurrentCurrency","code","getMainCurrency","u","data","current","currency","arguments","length","undefined","addCode","main","negative","num","Math","abs","exchange","formatted","numberFormat","decimalPlace","decimalPoint","space","signPosition","sign","format","exchangeRate","window"],"mappings":"AAAAA,OAAOC,SAAS,IAAI,SAAUC,EAASC,GAGrC,IAIWC,EAAQ,OAAAF,EAAA,gBAAA,GAAA,CAAAG,QAAA,GAAAC,QAAA,WAPrBJ,EAAA,WAAAE,EAAA,MACAG,uBACA,OAAAC,KAAAC,qBAAAC,OAAAF,KAAAG,kBAAAD,IACA,CACAH,4BACA,OAAAK,EAAAC,KAAA,YAAAC,OALAZ,CAQEK,yBACE,OAAOK,EAAAC,KAAKJ,YAAAA,IACd,CASMF,cANKM,GACX,IAAAE,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAAE,EAEAC,EAAOR,UAAkBM,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvBD,EAASF,GAAKL,KAAYY,qBAC5B,IAAAC,EAAAC,EAAA,EAMQA,EAAMC,KAAKC,IAAIF,GAJvBA,EAAAd,KAAAiB,SAAAH,EAAAP,GACF,IAAAW,EAAAd,EAAAe,aAAAL,EAAAP,EAAAa,aAAAb,EAAAc,cACAC,EAAAf,EAAAe,MAAA,IAAA,GAME,MALF,UAAAf,EAAAgB,aACAL,EAAAX,EAAAiB,KAAAF,EAAAJ,EAEAA,GAAAI,EAAAf,EAAAiB,KAEEX,EAAmBN,IAAQC,GACzBD,IAEAW,EAAYX,EAAUL,KAAA,IAAAgB,GAGhBA,EAMF,CACAnB,0BAHiBuB,GAErB,IAAIf,EAASgB,UAAAA,OAAiB,QAASb,IAAFF,UAAE,IAAAA,UAAA,GAGjC,OAFJU,KAASO,OAAGlB,EAASiB,KAAIrB,kBAAoBQ,EAG3C,CACAZ,gBAFOe,EAAIQ,GACf,OAAAR,EAAAP,EAAAmB,YAGI,IAEFC,OADF/B,SAAAA,CAEA,EAEJ","file":"currency.js","sourcesContent":["/**\n * Part of shopgo project.\n *\n * @copyright  Copyright (C) 2023 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nexport class Currency {\n  static isSubCurrency() {\n    return this.getCurrentCurrency().code !== this.getMainCurrency().code;\n  }\n\n  static getCurrentCurrency() {\n    return u.data('currency').current;\n  }\n\n  static getMainCurrency() {\n    return u.data('currency').main;\n  }\n\n  /**\n   * Translate from PHP Currency::formatPrice() by ChatGPT\n   *\n   * @param {Number|String} num\n   * @param {*} currency\n   * @param {Boolean} addCode\n   * @returns {string}\n   */\n  static format(num, currency = undefined, addCode = false) {\n    currency = currency || this.getCurrentCurrency();\n\n    let negative = num < 0;\n    num = Math.abs(num);\n\n    num = this.exchange(num, currency);\n\n    let formatted = u.numberFormat(num, currency.decimalPlace, currency.decimalPoint);\n\n    let space = currency.space ? ' ' : '';\n\n    if (currency.signPosition === 'start') {\n      formatted = currency.sign + space + formatted;\n    } else {\n      formatted += space + currency.sign;\n    }\n\n    if (negative) {\n      return '-' + formatted;\n    }\n\n    if (addCode) {\n      formatted = currency.code + \" \" + formatted;\n    }\n\n    return formatted;\n  }\n\n  static formatMainCurrency(num, addCode = false) {\n    return this.format(num, this.getMainCurrency(), addCode);\n  }\n\n  static exchange(num, currency) {\n    return num * currency.exchangeRate;\n  }\n}\n\nwindow.Currency = Currency;\n"]}