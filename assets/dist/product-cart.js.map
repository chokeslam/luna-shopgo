{"version":3,"sources":["product-cart.js"],"names":["System","register","_export","_context","async","sendAddAction","el","productId","dataset","id","Error","variantId","qtyInput","document","querySelector","quantity","Number","value","attachments","findAttachments","u","attachItems","idInput","attachment","checked","res","$http","post","product_id","variant_id","updateCartButton","data","trigger","length","count","querySelectorAll","$cartButtons","$cartQuantity","$cartButton","classList","console","error","e","toCartPage","location","route","setters","_main","delegate","alert","message","swal","title","addToCart","target","buy"],"mappings":"AAAAA,OAAOC,SAAS,CAAC,UAAU,SAAUC,EAASC,GAiB9CC,eAAeC,EAAcC,GAC3B,MAAMC,EAAYD,EAAGE,QAAQC,GAE7B,IAAKF,EACH,MAAM,IAAIG,MAAM,iBAGlB,MAAMC,EAAYL,EAAGE,QAAQG,UAE7B,IAAKA,EACH,MAAM,IAAID,MAAM,iBAGlB,MAAME,EAAWC,SAASC,cAAc,wBAClCC,EAAWC,QAAOJ,aAAQ,EAARA,EAAUK,QAAS,GAE3CC,EA0EF,WAEA,MAAAA,EAASC,EAAeA,UAAG,0BACnBD,EAAcE,CAAC,EACrB,IAAA,MAAMC,KAAgBH,EAAA,CAEtB,MAAKI,EAAMC,EAAcL,cAAa,6BAC9BI,EAAUC,EAAWT,cAAc,mCACzCQ,EAAMV,UAENS,EAAYG,EAASP,OAAAD,OAAAJ,EAAAK,OAxCrB,CA2CF,OAAAI,CAzCA,CA9CAF,GACA,IAEA,MAAIM,QAAAL,EAAAM,MAAAC,KAAA,uBAAA,CACFC,WAAYrB,EAGRqB,WAAYrB,EACZsB,WACAd,gBAKJe,OA6CJ,SAAAC,GAEAX,EAAAY,QAASF,cAAiBC,GACxBX,MAAEY,EAAQD,EAAAE,OAEJC,EAAaD,SAAME,iBAAA,2BAEzB,IAAA,MAAMC,KAAevB,EAASsB,CAE9B,MAAKE,EAAiBC,EAAIF,cAAc,6BACtCE,EAAMD,UAAgBC,OAAAA,cAAYxB,EAAc,GAEhDwB,EAAYC,YAAgBL,CAtC5B,CACF,CAvBIJ,CACDL,EAAAM,KAAAA,MAEDD,EAAAA,IAtBA,CAwBA,MAAOL,GAEPe,MADAA,QAAQC,MAAEC,GACVF,CAvBA,CACF,CA2DF,SAAAG,IAEAC,SAASD,KAAAA,EAAUE,MAAG,OAjCpB,CAkEF,MAAA,CAACC,QAAA,CAAA,SAAAC,GAAA,GAAAD,QAAA,WA3HD1B,EAAA4B,SAAAnC,SAAA,0BAAA,SAAA6B,KAsDAtC,eAAAE,GAEA,UACMD,EAAAC,EAxBF,CAyBA,MAAMD,GAENe,YADAA,EAAA6B,MAAQP,EAAEQ,QAAA,GAAA,UAvBV,OA0BFC,KAAA,CAEAC,MAAO,SACLA,QAAO,CAAA,OAAQ,WASjBT,GA7BA,CA5CFU,CAAAX,EAAAY,OAAA,IAEAlC,EAAA4B,SAAAnC,SAAA,kBAAA,SAAA6B,KA0EAtC,eAAAE,GAEA,UACMD,EAAAC,EA/BF,CAgCA,MAAMD,GAENe,YADAA,EAAA6B,MAAQP,EAAEQ,QAAA,GAAA,UA9BV,CAiCFP,GA/BA,CAlDFY,CAAAb,EAAAY,OAAA,GAsFI,EAEJ","file":"product-cart.js","sourcesContent":["/**\n * Part of shopgo project.\n *\n * @copyright  Copyright (C) 2023 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nimport '@main';\n\nu.delegate(document, '[data-task=add-to-cart]', 'click', (e) => {\n  addToCart(e.target);\n});\n\nu.delegate(document, '[data-task=buy]', 'click', (e) => {\n  buy(e.target);\n});\n\nasync function sendAddAction(el) {\n  const productId = el.dataset.id;\n\n  if (!productId) {\n    throw new Error('No product ID');\n  }\n\n  const variantId = el.dataset.variantId;\n\n  if (!variantId) {\n    throw new Error('No variant ID');\n  }\n\n  const qtyInput = document.querySelector('[data-role=quantity]');\n  const quantity = Number(qtyInput?.value || 1);\n\n  // Find additional purchases\n  const attachments = findAttachments();\n\n  try {\n    const res = await u.$http.post(\n      '@cart_ajax/addToCart',\n      {\n        product_id: productId,\n        variant_id: variantId,\n        quantity,\n        attachments\n      }\n    );\n\n    updateCartButton(res.data.data);\n\n    return res.data;\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n}\n\nasync function addToCart(el) {\n  try {\n    await sendAddAction(el);\n  } catch (e) {\n    u.alert(e.message, '', 'warning');\n    return;\n  }\n\n  const v = await swal({\n    title: '已加入購物車',\n    buttons: [\n      '繼續購物',\n      '前往結帳'\n    ]\n  });\n\n  if (!v) {\n    return;\n  }\n\n  toCartPage();\n}\n\nasync function buy(el) {\n  try {\n    await sendAddAction(el);\n  } catch (e) {\n    u.alert(e.message, '', 'warning');\n    return;\n  }\n\n  toCartPage();\n}\n\nfunction toCartPage() {\n  location.href = u.route('cart');\n}\n\nfunction updateCartButton(data) {\n  u.trigger('cart.update', data);\n\n  const count = data.length;\n\n  const $cartButtons = document.querySelectorAll('[data-role=cart-button]');\n\n  for (const $cartButton of $cartButtons) {\n    const $cartQuantity = $cartButton.querySelector('[data-role=cart-quantity]');\n\n    $cartButton.classList.toggle('h-has-items', count > 0);\n    $cartQuantity.textContent = count;\n  }\n}\n\nfunction findAttachments() {\n  const attachments = u.selectAll('[data-role=attachment]');\n  const attachItems = {};\n\n  for (const attachment of attachments) {\n    const idInput = attachment.querySelector('[data-role=attachment_id]');\n    const qtyInput = attachment.querySelector('[data-role=attachment_quantity]');\n\n    if (idInput.checked) {\n      attachItems[idInput.value] = Number(qtyInput.value);\n    }\n  }\n\n  return attachItems;\n}\n"]}